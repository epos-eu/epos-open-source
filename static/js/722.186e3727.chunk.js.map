{"version":3,"file":"static/js/722.186e3727.chunk.js","mappings":"+LAEaA,GAAoBC,E,QAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kdAc9B,SAACC,GAAC,OAAMA,EAAEC,KAAO,UAAY,QAAQ,IACxC,SAACD,GAAC,OAAMA,EAAEC,KAAO,IAAM,GAAG,I,SCuBvC,EApCoB,WAClB,IAAAC,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAE1BI,GAAiBC,EAAAA,EAAAA,cAAY,WACjC,IAAMC,EAAgBC,OAAOC,SAExBN,GAAcI,EAAgB,IACjCH,GAAc,GACLG,GAAiB,KAC1BH,GAAc,EAElB,GAAG,CAACD,KAEJO,EAAAA,EAAAA,YAAU,WAER,OADAF,OAAOG,iBAAiB,SAAUN,GAC3B,WACLG,OAAOI,oBAAoB,SAAUP,EACvC,CACF,GAAG,CAACA,IAWJ,OACEQ,EAAAA,EAAAA,KAACpB,EAAiB,CAACqB,QAVJ,WACCC,SAASC,eAAe,SAChCC,eAAe,CACrBC,SAAU,SACVC,MAAO,MACPC,OAAQ,WAEZ,EAGwCtB,KAAMK,EAAWkB,UACrDR,EAAAA,EAAAA,KAACS,EAAAA,EAAO,CAACC,IAAI,iBAAiBC,MAAM,OAAOC,OAAO,UAGxD,C","sources":["common/ScrollToTop/styles.ts","common/ScrollToTop/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ScrollUpContainer = styled(\"div\")<{\r\n  show: boolean;\r\n}>`\r\n  padding: 10px;\r\n  position: fixed;\r\n  right: 30px;\r\n  bottom: 30px;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  background: rgb(241, 242, 243);\r\n  text-align: center;\r\n  align-items: center;\r\n  border-radius: 4px;\r\n  transition: all 0.3s ease-in-out;\r\n  visibility: ${(p) => (p.show ? \"visible\" : \"hidden\")};\r\n  opacity: ${(p) => (p.show ? \"1\" : \"0\")};\r\n  display: flex;\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    background: rgb(224, 224, 224);\r\n  }\r\n\r\n  @media screen and (max-width: 1240px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { SvgIcon } from \"../SvgIcon\";\r\nimport { ScrollUpContainer } from \"./styles\";\r\n\r\nconst ScrollToTop = () => {\r\n  const [showScroll, setShowScroll] = useState(false);\r\n\r\n  const checkScrollTop = useCallback(() => {\r\n    const offsetFromTop = window.scrollY;\r\n\r\n    if (!showScroll && offsetFromTop > 350) {\r\n      setShowScroll(true);\r\n    } else if (offsetFromTop <= 350) {\r\n      setShowScroll(false);\r\n    }\r\n  }, [showScroll]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", checkScrollTop);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", checkScrollTop);\r\n    };\r\n  }, [checkScrollTop]);\r\n\r\n  const scrollUp = () => {\r\n    const element = document.getElementById(\"intro\") as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"end\",\r\n      inline: \"nearest\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ScrollUpContainer onClick={scrollUp} show={showScroll}>\r\n      <SvgIcon src=\"scroll-top.svg\" width=\"20px\" height=\"20px\" />\r\n    </ScrollUpContainer>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n"],"names":["ScrollUpContainer","styled","_templateObject","_taggedTemplateLiteral","p","show","_useState","useState","_useState2","_slicedToArray","showScroll","setShowScroll","checkScrollTop","useCallback","offsetFromTop","window","scrollY","useEffect","addEventListener","removeEventListener","_jsx","onClick","document","getElementById","scrollIntoView","behavior","block","inline","children","SvgIcon","src","width","height"],"sourceRoot":""}