{"version":3,"file":"static/js/350.cbc1c75a.chunk.js","mappings":"uQAEO,MAAMA,EAAgBC,EAAAA,GAAOC,GAAG;;;;;;;EAS1BC,EAAcF,EAAAA,GAAOC,GAAG;;;;;;;EASxBE,EAAmBH,EAAAA,GAAOC,GAAG;;;;;;;;;;EAY7BG,EAAyBJ,EAAAA,GAAOC,GAAG;;;;;;;;;;;EAYnCI,EAAiBL,EAAAA,GAAOM,EAAE;;;;;EAO1BC,EAAsBP,EAAAA,GAAOQ,CAAC;;;;;iFChD3C,MAAMC,EAAe,CACnB,CAAEC,KAAM,OAAQC,WAAY,kDAC5B,CAAED,KAAM,WAAYC,WAAY,oKAChC,CAAED,KAAM,MAAOC,WAAY,0BAC3B,CAAED,KAAM,OAAQC,WAAY,gDAC5B,CAAED,KAAM,aAAcC,WAAY,2IAClC,CAAED,KAAM,MAAOC,WAAY,8BAC3B,CAAED,KAAM,MAAOC,WAAY,4BAC3B,CAAED,KAAM,OAAQC,WAAY,qCAC5B,CAAED,KAAM,UAAWC,WAAY,gEAC/B,CAAED,KAAM,SAAUC,WAAY,kDAC9B,CAAED,KAAM,QAASC,WAAY,6CAC7B,CAAED,KAAM,OAAQC,WAAY,mEAC5B,CAAED,KAAM,QAASC,WAAY,6BAC7B,CAAED,KAAM,OAAQC,WAAY,uCAC5B,CAAED,KAAM,MAAOC,WAAY,8BAC3B,CAAED,KAAM,MAAOC,WAAY,6BAC3B,CAAED,KAAM,QAASC,WAAY,2CAC7B,CAAED,KAAM,QAASC,WAAY,2CAC7B,CAAED,KAAM,MAAOC,WAAY,gCAC3B,CAAED,KAAM,QAASC,WAAY,2BAC7B,CAAED,KAAM,SAAUC,WAAY,kEAC9B,CAAED,KAAM,MAAOC,WAAY,6BAC3B,CAAED,KAAM,MAAOC,WAAY,oDAC3B,CAAED,KAAM,QAASC,WAAY,yCAC7B,CAAED,KAAM,MAAOC,WAAY,gDAC3B,CAAED,KAAM,WAAYC,WAAY,uCAChC,CAAED,KAAM,SAAUC,WAAY,iCAC9B,CAAED,KAAM,MAAOC,WAAY,2BAC3B,CAAED,KAAM,MAAOC,WAAY,oBAC3B,CAAED,KAAM,KAAMC,WAAY,iBAC1B,CAAED,KAAM,gBAAiBC,WAAY,qDAGjCC,GAAYC,EAAAA,EAAAA,MAAK,IAAM,wCAoB7B,EAnBiBC,KAEbC,EAAAA,EAAAA,MAACH,EAAS,CAAAI,SAAA,EACTC,EAAAA,EAAAA,KAACZ,EAAAA,eAAc,CAAAW,SAAC,cACfC,EAAAA,EAAAA,KAACV,EAAAA,oBAAmB,CAAAS,SAAC,kLAGrBC,EAAAA,EAAAA,KAAClB,EAAAA,cAAa,CAAAiB,SACXP,EAAaS,IAAKC,IACjBJ,EAAAA,EAAAA,MAACb,EAAAA,YAAW,CAAAc,SAAA,EACVC,EAAAA,EAAAA,KAACd,EAAAA,iBAAgB,CAAAa,SAAEG,EAAKT,QACxBO,EAAAA,EAAAA,KAACb,EAAAA,uBAAsB,CAAAY,SAAEG,EAAKR,eAFdQ,EAAKT,W","sources":["pages/Glossary/styles.ts","pages/Glossary/index.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GlossaryTable = styled.div`\n  display: table;\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse;\n  border: 1px solid black; \n  margin-bottom: 25px;\n`;\n\nexport const GlossaryRow = styled.div`\n  display: table-row;\n  border-bottom: 1px solid #ddd;\n\n  &:nth-child(odd) {\n    background-color: #f9f9f9;\n  }\n`;\n\nexport const GlossaryCellTerm = styled.div`\n  display: table-cell;\n  padding: 15px;\n  margin: 1rem 0 2rem 0;\n  font-family: \"OpenSans\", sans-serif;\n  color: black;\n  text-align: left;\n  vertical-align: top;\n  font-size:16px;\n  border: 1px solid black;\n`;\n\nexport const GlossaryCellDefinition = styled.div`\n  display: table-cell;\n  padding: 15px;\n  vertical-align: top;\n  text-align: justify;\n  margin: 1rem 0 2rem 0;\n  font-family: \"OpenSans\", sans-serif;\n  color: black;\n  text-align: left;\n  font-size:16px;\n  border: 1px solid black;\n`;\nexport const GlossaryHeader = styled.h1`\n  font-size: 32px;\n  margin: 1.5rem 0 2rem 0;\n  font-family: \"Lato\", \"OpenSans\", sans-serif;\n  color:  #152c15 ;\n`;\n\nexport const GlossaryDescription = styled.p`\n  margin: 1rem 0 2rem 0;\n font-family: \"OpenSans\", sans-serif;\n color: black;\n font-size:16px;\n`;\n\n\n\n\n","import { lazy } from 'react';\nimport { GlossaryTable, GlossaryRow, GlossaryCellTerm, GlossaryCellDefinition,GlossaryDescription,GlossaryHeader} from './styles';\n\nconst glossaryData = [\n  { term: 'AAAI', definition: 'Authentication, Authorisation, and Accounting.' },\n  { term: 'Cohesion', definition: 'Cohesion refers to how well the individual elements within an application work together. Highly cohesive systems tend to be more robust, reliable, and reusable.' },\n  { term: 'csv', definition: 'Comma Separated Value.' },\n  { term: 'DDSS', definition: 'Data, Data products, Software, and Services.' },\n  { term: 'Decoupling', definition: 'Microservice architecture is often achieved by decoupling a monolithic application into independent modules for each business function.' },\n  { term: 'DOI', definition: 'Digital Object Identifier.' },\n  { term: 'EAB', definition: 'External Advisory Board.' },\n  { term: 'EIDA', definition: 'European Integrated Data Archive.' },\n  { term: 'EPOS-IP', definition: 'European Plate Observing System – Implementation Phase.' },\n  { term: 'EPOS-N', definition: 'European Plate Observing System – Norway.' },\n  { term: 'EUREF', definition: 'Reference Frame Sub Commission for Europ.' },\n  { term: 'FAIR', definition: 'Data principles: Findable, Accessible, Interoperable, Reusable.' },\n  { term: 'GLASS', definition: 'Software/portal for WP10.' },\n  { term: 'GNSS', definition: 'Global Navigation Satellite System.' },\n  { term: 'GPS', definition: 'Global Positioning System.' },\n  { term: 'ICS', definition: 'Integrated Core Services.' },\n  { term: 'ICS-C', definition: 'Integrated Core Services - Central Hub.' },\n  { term: 'ICS-D', definition: 'Integrated Core Services - Distributed.' },\n  { term: 'MoU', definition: 'Memorandum of Understanding.' },\n  { term: 'MSEED', definition: 'MiniSEED (data format).' },\n  { term: 'ORFEUS', definition: 'Observatories and Research Facilities for European Seismology.' },\n  { term: 'PMB', definition: 'Project Management Board.' },\n  { term: 'RCN', definition: 'Research Council of Norway (Forskningsrådet).' },\n  { term: 'RINEX', definition: 'Receiver Independent Exchange Format.' },\n  { term: 'SAC', definition: 'Seismic Analysis Code (storage/file format).' },\n  { term: 'SeedLink', definition: 'Protocol for seismic data exchange.' },\n  { term: 'SEISAN', definition: 'Earthquake analysis software.' },\n  { term: 'TCS', definition: 'Thematic Core Services.' },\n  { term: 'WMS', definition: 'Web Map Service.' },\n  { term: 'WP', definition: 'Work Package.' },\n  { term: 'Data Provider', definition: 'An organisation which produces data or metadata.' },\n];\n\nconst Container = lazy(() => import(\"../../common/Container\"));\nconst Glossary = () => {\n  return (\n    <Container>\n     <GlossaryHeader>Glossary</GlossaryHeader>\n      <GlossaryDescription>\n        Below is a glossary of terms related to the EPOS project and its software architecture. It includes key technical terms and abbreviations used throughout the documentation.\n      </GlossaryDescription>\n      <GlossaryTable>\n        {glossaryData.map((item) => (\n          <GlossaryRow key={item.term}>\n            <GlossaryCellTerm>{item.term}</GlossaryCellTerm>\n            <GlossaryCellDefinition>{item.definition}</GlossaryCellDefinition>\n          </GlossaryRow>\n        ))}\n      </GlossaryTable>\n    </Container>\n  );\n};\n\nexport default Glossary;\n"],"names":["GlossaryTable","styled","div","GlossaryRow","GlossaryCellTerm","GlossaryCellDefinition","GlossaryHeader","h1","GlossaryDescription","p","glossaryData","term","definition","Container","lazy","Glossary","_jsxs","children","_jsx","map","item"],"sourceRoot":""}