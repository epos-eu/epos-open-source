{"version":3,"file":"static/js/610.04336721.chunk.js","mappings":"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","sources":["pages/Contributors/styles.ts","components/ContributorCard/styles.ts","common/profilePicture/index.tsx","components/ContributorCard/index.tsx","pages/Contributors/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Section = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const MainHeader = styled.h1`\n  font-size: 32px;\n  margin: 2rem 0 2rem 0;\n  font-family: \"Lato\", \"OpenSans\", sans-serif;\n  color:  #152c15 ;\n`;\nexport const Header = styled.h1`\n  font-size: 32px;\n  margin: 7rem 0 2rem 0;\n  font-family: \"Lato\", \"OpenSans\", sans-serif;\n  color:  #152c15 ;\n  text-align:center;\n`;\nexport const SectionHeader = styled.h1`\n  font-size: 18px;\n  margin: 1.5rem 0 2rem 0;\n  font-family: \"Lato\", \"OpenSans\", sans-serif;\n  color:  #152c15 ;\n`;\n\nexport const Paragraph = styled.p`\n font-size:16px;\n margin: 1rem 0 2rem 0;\n font-family: \"OpenSans\", sans-serif;\n color: black;\n`;\n","import styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 230px;\n  padding: 16px;\n  margin: 16px;\n  background-color: #fff;\n  text-align: center;\n  \n`;\n\nexport const ProfileImage = styled.img`\n  width: 80px;\n  height: 80px;\n  object-fit: cover;\n  margin-bottom: 16px;\n   border-radius: 50%; \n    border: 1px solid #ddd;\n`;\n\nexport const Name = styled.h3`\n  font-size: 1.5em;\n  margin: 8px 0;\n  font-weight: bold;\n  color:black;\n`;\n\nexport const Role = styled.p`\n  font-size: 1.3em;\n  color: #457945;;\n  font-weight: bold;\n`;\nexport const Introduction = styled.p`\n  font-size: 1em;\n  color: black;\n`;\nexport const SocialCardContainer = styled(\"div\")`\n  width: 130px;\n  display: flex;\n  justify-content: space-between;\n  text-align: center;\n  align-items: center;\n  transition: all 0.1s ease-in-out;\n\n  a {\n    &:hover,\n    &:active,\n    &:focus {\n      -webkit-transform: scale(1.1);\n      -ms-transform: scale(1.1);\n      transform: scale(1.1);\n    }\n  }\n\n  @media screen and (max-width: 769px) {\n    width: auto;\n\n    a:not(:last-child) {\n      display: none;\n    }\n  }\n\n  div {\n    cursor: pointer;\n    margin-right: 15px;\n    width: 25px;\n    height: 25px;\n\n    &:hover {\n      fill: rgb(255, 130, 92);\n    }\n  }\n`;","type ProfileImageProps = {\n    src: string;\n    alt?: string;\n    width?: number;\n    height?: number;\n  };\n  \n  export const ProfileImage = ({\n    src,\n    alt = \"Profile image\",\n    width = 80,\n    height = 80,\n  }: ProfileImageProps) => {\n    return (\n      <img\n        src={src}\n        alt={alt}\n        width={width}\n        height={height}\n        style={{\n          borderRadius: \"50%\",\n          objectFit: \"cover\",\n          marginBottom: \"16px\",\n        }}\n      />\n    );\n  };\n  ","import React from \"react\";\nimport {\n  CardContainer,\n  Name,\n  Role,\n  Introduction,\n  SocialCardContainer,\n} from \"./styles\";\nimport { SocialLink } from \"../../common/SocialLink\";\nimport { ProfileImage } from \"../../common/profilePicture\";\n// Define the props interface\nexport interface CardProps {\n  name?: string;\n  surname?: string;\n  image: string; // Optional property\n  role?: string;\n  src?: string;\n  width?: string;\n  height?: string;\n  LinkldnHref?: string;\n  GithubHref?: string;\n  GitLabHref?: string;\n  intro?:string\n}\n\nconst Card: React.FC<CardProps> = ({\n  name,\n  surname,\n  image,\n  role,\n  src,\n  width = \"80px\", // Default width\n  height = \"80px\", // Default height\n  LinkldnHref,\n  GithubHref,\n  GitLabHref,\n  intro\n}) => {\n  return (\n    <CardContainer>\n      <ProfileImage\n          src={image}\n          alt={ name}\n          width={120}\n          height={120}\n        />\n\n      <Name>\n        {name} {surname}\n      </Name>\n      <Role>{role}</Role>\n      <Introduction>{intro}</Introduction>\n      <SocialCardContainer>\n  {LinkldnHref && (\n    <SocialLink\n      href={LinkldnHref}\n      src=\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/linkedin/linkedin-original.svg\"\n    />\n  )}\n  {GithubHref && (\n    <SocialLink\n      href={GithubHref}\n      src=\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/github/github-original.svg\"\n    />\n  )}\n  {GitLabHref && (\n    <SocialLink\n      href={GitLabHref}\n      src=\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/gitlab/gitlab-original.svg\"\n    />\n  )}\n</SocialCardContainer>\n\n    </CardContainer>\n  );\n};\n\nexport default Card;\n","import React, { useEffect, useState, lazy } from 'react';\nimport {\n  Section,\n  Paragraph,\n  Header,\n  MainHeader\n} from \"./styles\";\n\nimport Card from \"../../components/ContributorCard\";\nconst Container = lazy(() => import(\"../../common/Container\"));\n\n\n// Define the props interface\ninterface TeamMember {\n  name: string;\n  surname: string;\n  image: string;\n  role?: string;\n  LinkldnHref?: string;\n  GithubHref?: string;\n  GitLabHref?: string;\n  intro?: string;\n}\n\n\n// Utility function to chunk the array\nconst chunkArray = <T,>(array: T[], chunkSize: number): T[][] => {\n  const chunks: T[][] = [];\n  for (let i = 0; i < array.length; i += chunkSize) {\n    chunks.push(array.slice(i, i + chunkSize));\n  }\n  return chunks;\n};\n\nconst Contributors = () => {\n  const [people, setPeople] = useState<TeamMember[]>([]);\n\n  useEffect(() => {\n    async function fetchPeopleData() {\n      try {\n        const response = await fetch(\"https://epos-ci.brgm.fr/api/v4/projects/epos-public%2Fissuetracker/issues/19500\");\n        if (!response.ok) throw new Error(\"Failed to fetch people data\");\n  \n        const data = await response.json();\n  \n        let finalData: TeamMember[] = [];\n        try {\n          const parsed = JSON.parse(data.description);\n          if (Array.isArray(parsed)) {\n            finalData = parsed;\n          } else {\n            console.error(\"Parsed data is not an array:\", parsed);\n          }\n        } catch (e) {\n          console.error(\"Failed to parse people data from description:\", e);\n        }\n  \n        setPeople(finalData);\n        console.log('final data' , finalData);\n        \n      } catch (error) {\n        console.error(\"Error fetching people data:\", error);\n      }\n    }\n  \n    fetchPeopleData();\n  }, []);\n  \n\n  const chunkedPeople = chunkArray(people, 4); // Group people into chunks of 4\n\n  console.log('people ' , people);\n  \n  \n\n  return (\n    <Container>\n      <Section>\n        <MainHeader>EPOS Open Source Contribution</MainHeader>\n        <Paragraph>\n        EPOS open source projects thrive on collaboration and the collective efforts of diverse individuals\n         from around the world. Contributors bring their unique skills, perspectives, and expertise to create , build, improve, \n         and maintain software that benefits the broader community. These contributions can range from writing code, fixing bugs, \n         and improving documentation to designing user interfaces, testing features, and providing feedback. By participating \n         in EPOS open source, people not only help create accessible, innovative, and sustainable solutions but also gain valuable experience, \n         enhance their technical skills, and build a global network of like-minded professionals. Together, they foster a spirit of knowledge sharing and \n         innovation that drives the EPOS open source movement forward.\n        </Paragraph>\n      </Section>\n      <Section>\n        <Header>Meet The Team</Header>\n        <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"20px\" }}>\n      {chunkedPeople.map((chunk, chunkIndex) => (\n        <React.Fragment key={chunkIndex}>\n          {/* Row Container */}\n          <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"10px\", justifyContent: \"center\" }}>\n            {chunk.map((person, personIndex) => (\n              <Card\n                key={`${chunkIndex}-${personIndex}`}\n                name={person.name}\n                surname={person.surname}\n                image={person.image}\n                role={person.role}\n                GithubHref={person.GithubHref}\n                GitLabHref={person.GitLabHref}\n                LinkldnHref={person.LinkldnHref}\n                intro={person.intro}\n              />\n            ))}\n          </div>\n          {/* Horizontal line after each row except the last one */}\n          {chunkIndex < chunkedPeople.length - 1 && (\n            <hr style={{ border: \"1px solid #ddd\", width: \"100%\" }} />\n          )}\n        </React.Fragment>\n      ))}\n    </div>\n\n      </Section>\n    </Container>\n  );\n};\n\nexport default Contributors;"],"names":["Section","styled","div","MainHeader","h1","Header","SectionHeader","Paragraph","p","CardContainer","Name","img","h3","Role","Introduction","SocialCardContainer","ProfileImage","_ref","src","alt","width","height","_jsx","style","borderRadius","objectFit","marginBottom","name","surname","image","role","LinkldnHref","GithubHref","GitLabHref","intro","_jsxs","children","SocialLink","href","Container","lazy","Contributors","people","setPeople","useState","useEffect","async","response","fetch","ok","Error","data","json","finalData","parsed","JSON","parse","description","Array","isArray","console","error","e","log","fetchPeopleData","chunkedPeople","chunkArray","array","chunkSize","chunks","i","length","push","slice","display","flexDirection","gap","map","chunk","chunkIndex","React","flexWrap","justifyContent","person","personIndex","Card","border"],"sourceRoot":""}